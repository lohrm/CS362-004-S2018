        -:    0:Source:cardtest4.c
        -:    0:Graph:cardtest4.gcno
        -:    0:Data:cardtest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function test_village called 1 returned 100% blocks executed 82%
        1:    8:void test_village(){
        -:    9:
        -:   10:	struct gameState state;
        -:   11:
        1:   12:	int k[10] = {adventurer, council_room, feast, gardens, mine, remodel, smithy, village, baron, great_hall};
        -:   13:
        1:   14:	initializeGame(2, k, 1, &state);
call    0 returned 100%
        -:   15:	
        1:   16:	int currentPlayer = whoseTurn(&state);
call    0 returned 100%
        1:   17:	int original_actions = state.numActions;
        1:   18:	int original_hand = state.handCount[currentPlayer];
        1:   19:	int original_played = state.playedCardCount;
        -:   20:
        1:   21:	printf("Testing Village:\n");
call    0 returned 100%
        -:   22:
        1:   23:	cardEffect(village, 0, 0, 0, &state, 0, NULL);
call    0 returned 100%
        -:   24:	// TEST 1
        1:   25:	printf("   TEST 1: Player drew a card\n");
call    0 returned 100%
        1:   26:	if(state.handCount[currentPlayer] == original_hand){
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   27:		printf("\tPASS - 1 card was added to player's hand\n");
call    0 returned 100%
        -:   28:	}
        -:   29:	else{
    #####:   30:		printf("\tFAIL - 1 card was not added to player's hand\n");
call    0 never executed
        -:   31:	}
        -:   32:	// TEST 2
        1:   33:	printf("   TEST 2: Player gained two action\n");
call    0 returned 100%
        1:   34:	if(state.numActions == original_actions+2){
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   35:		printf("\tPASS - 2 actions were added to player\n");
call    0 never executed
        -:   36:	}
        -:   37:	else{
        1:   38:		printf("\tFAIL - 2 actions were not added to player\n");
call    0 returned 100%
        -:   39:	}
        -:   40:	// TEST 3
        1:   41:	printf("   TEST 3: Village card was discarded into the played cards deck\n");
call    0 returned 100%
        1:   42:	if(state.playedCardCount == original_played+1){
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   43:		printf("\tPASS - Village card was discarded and not trashed\n");
call    0 returned 100%
        -:   44:	}
        -:   45:	else{
    #####:   46:		printf("\tFAIL - Village card was trashed\n");
call    0 never executed
        -:   47:	}
        1:   48:}
        -:   49:
function main called 1 returned 100% blocks executed 100%
        1:   50:int main(){
        -:   51:
        1:   52:	test_village();
call    0 returned 100%
        -:   53:
        1:   54:	return 0;
        -:   55:
        -:   56:}
